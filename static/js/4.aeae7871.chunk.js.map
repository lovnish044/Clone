{"version":3,"sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","constants/data.js","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","components/chat/menu/Conversation.jsx","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"names":["useStyles","makeStyles","imageContainer","display","justifyContent","profilePicture","width","height","borderRadius","padding","nameContainer","background","boxShadow","fontSize","color","margin","description","Profile","classes","account","useContext","AccountContext","Box","className","src","imageUrl","alt","Typography","name","header","marginTop","fontWeight","component","InfoDrawer","open","setOpen","profile","Drawer","onClose","ArrowBack","onClick","useStyle","menuItem","logout","border","HeaderMenu","useState","openDrawer","setOpenDrawer","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","setPerson","UserContext","handleClose","MoreVert","event","currentTarget","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","clientId","buttonText","onLogoutSuccess","alert","console","clear","alignItems","chatIcons","marginLeft","marginRight","avatar","Header","theme","transition","search","position","backgroundColor","searchIcon","spacing","inputRoot","inputInput","paddingLeft","Search","setText","InputBase","placeholder","root","input","inputProps","onChange","e","target","value","url","addUser","data","a","axios","post","response","log","getUsers","get","setConversation","getConversation","users","getMessages","id","newMessages","cursor","displayPicture","objectFit","container","timestamp","text","Conversation","user","newMessageFlag","socket","message","setMessage","useEffect","getConversationMessage","sender","googleId","receiver","updatedAt","getUser","senderId","receiverId","getTime","time","style","Date","getHours","getMinutes","overflow","divider","Conversations","setUsers","setActiveUsers","fetchData","fiteredData","filter","toLowerCase","includes","current","emit","on","map","index","length","Divider","Menu","rightContainer","status","ChatHeader","person","activeUsers","find","userId","wrapper","maxWidth","wordBreak","own","Message","formatDate","date","createdAt","footer","bottom","clipIcon","transform","Footer","sendText","setValue","EmojiEmotions","AttachFile","onKeyPress","Mic","backgroundImage","backgroundSize","overflowY","Messages","conversation","messages","setMessages","incomingMessage","setIncomingMessage","scrollRef","useRef","setNewMessageFlag","now","getMessageDetails","_id","scrollIntoView","members","prev","member","code","keyCode","which","conversationId","ref","ChatBox","getConversationDetails","textAlign","breakpoints","down","image","title","subTitle","EmptyChat","leftComponent","minWidth","rightComponent","borderLeft","withStyles","dialogPaper","maxHeight","classname","Dialog","paper","BackdropProps","Object","keys","dialog","qr","marginBottom","fontFamily","list","lineHeight","showloginButton","onLoginSuccess","res","profileObj","List","ListItem","left","top","onSuccess","onFailure","cookiePolicy","isSignedIn","loginHeader","Messenger","AppBar","Toolbar"],"mappings":"gRAKMA,EAAYC,YAAW,CACzBC,eAAgB,CACZC,QAAS,OACTC,eAAgB,UAEpBC,eAAgB,CACZC,MAAO,IACPC,OAAQ,IACRC,aAAc,MACdC,QAAS,UAEbC,cAAe,CACXC,WAAY,UACZF,QAAS,gBACTG,UAAW,gCACX,iBAAkB,CACdC,SAAU,GACVC,MAAM,WAEV,gBAAiB,CACbC,OAAQ,SACRD,MAAO,YAGfE,YAAa,CACTP,QAAS,sBACT,QAAS,CACLK,MAAO,sBACPD,SAAU,OA8BPI,EAzBC,WACZ,IAAMC,EAAUlB,IAERmB,EAAYC,qBAAWC,KAAvBF,QAER,OACI,qCACI,cAACG,EAAA,EAAD,CAAKC,UAAWL,EAAQhB,eAAxB,SACI,qBAAKsB,IAAKL,EAAQM,SAAUC,IAAI,iBAAiBH,UAAWL,EAAQb,mBAExE,eAACiB,EAAA,EAAD,CAAKC,UAAWL,EAAQR,cAAxB,UACI,cAACiB,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,UAAaR,EAAQS,UAEzB,cAACN,EAAA,EAAD,CAAKC,UAAWL,EAAQF,YAAxB,SACI,cAACW,EAAA,EAAD,sGAEJ,eAACL,EAAA,EAAD,CAAKC,UAAWL,EAAQR,cAAxB,UACI,cAACiB,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,iCClDV3B,EAAYC,YAAW,CAC3B4B,OAAQ,CACNlB,WAAY,UACZJ,OAAQ,GACRO,MAAO,UACPX,QAAS,OACT,QAAS,CACP2B,UAAW,OACXrB,QAAS,GACTsB,WAAY,MAGhBC,UAAW,CACTrB,WAAY,UACZJ,OAAQ,SAwBG0B,EApBI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC7BlB,EAAUlB,IAMhB,OACE,eAACqC,EAAA,EAAD,CAAQH,KAAMA,EAAMI,QALF,WAClBH,GAAQ,IAIR,UACE,eAACb,EAAA,EAAD,CAAKC,UAAWL,EAAQW,OAAxB,UACE,cAACU,EAAA,EAAD,CAAWC,QAAS,kBAAML,GAAQ,MAClC,cAACR,EAAA,EAAD,yBAEF,cAACL,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAxB,SACII,GAAW,cAAC,EAAD,UC1BfK,EAAWxC,YAAW,CACxByC,SAAU,CACN7B,SAAU,GACVJ,QAAS,qBACTK,MAAO,WAEX6B,OAAQ,CACJC,OAAO,iBACPhC,UAAW,iBACX,QAAS,CACLH,QAAS,oBA0ENoC,EArEI,WACf,IAAM3B,EAAUuB,IAEhB,EAAwBK,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaC,EAAb,KACA,EAAoCW,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAkF5B,qBAAWC,KAArF4B,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,mBAAoBC,EAAxC,EAAwCA,iBAAkBC,EAA1D,EAA0DA,oBAClDC,EAAcjC,qBAAWkC,KAAzBD,UAOFE,EAAc,WAChBpB,EAAQ,OAkBZ,OACI,qCACI,cAACqB,EAAA,EAAD,CAAUhB,QAzBE,SAACiB,GACjBtB,EAAQsB,EAAMC,kBAyBV,eAAC,IAAD,CACIC,SAAUzB,EACV0B,aAAW,EACX1B,KAAMA,EACNI,QAASiB,EACTM,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAZpB,UAeI,cAACE,EAAA,EAAD,CAAU3C,UAAWL,EAAQwB,SAAUF,QAAS,WAAQe,IAvBhEP,GAAc,IAuBN,qBACA,cAACkB,EAAA,EAAD,CAAU3C,UAAWL,EAAQwB,SAAUF,QAAS,WAAQe,KAAxD,SACEJ,EACE,cAAC,eAAD,CACIgB,SCnFA,2EDoFAC,WAAW,SACXC,gBAvCK,WACrBC,MAAM,yCACNC,QAAQC,QACRpB,GAAoB,GACpBF,GAAmB,GACnBD,EAAW,IACXI,EAAU,KAkCM9B,UAAWL,EAAQyB,SAEL,UAI1B,cAAC,EAAD,CAAYT,KAAMa,EAAYZ,QAASa,EAAeZ,SAAS,QElFrEpC,EAAYC,YAAW,CACzB4B,OAAQ,CACJtB,OAAQ,GACRI,WAAY,UACZR,QAAS,OACTM,QAAS,YACTgE,WAAY,UAEhBC,UAAW,CACPC,WAAY,OACZ,QAAS,CACLA,WAAY,EACZlE,QAAS,EACTK,MAAO,WAEX,iBAAkB,CACdD,SAAU,GACV+D,YAAa,EACb9C,UAAW,IAGnB+C,OAAQ,CACJtE,OAAQ,GACRD,MAAO,GACPE,aAAc,SA6BPsE,EAzBA,WACX,IAAM5D,EAAUlB,IAEhB,EAAoC8C,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEQ7B,EAAYC,qBAAWC,KAAvBF,QAMR,OACI,qCACI,eAACG,EAAA,EAAD,CAAKC,UAAWL,EAAQW,OAAxB,UACI,qBAAKL,IAAKL,EAAQM,SAAUF,UAAWL,EAAQ2D,OAAQrC,QAAS,WANxEQ,GAAc,MAON,eAAC1B,EAAA,EAAD,CAAKC,UAAWL,EAAQwD,UAAxB,UACI,cAAC,IAAD,IACA,cAAC,EAAD,UAGR,cAAC,EAAD,CAAYxC,KAAMa,EAAYZ,QAASa,EAAeZ,SAAS,Q,kBCtDrEpC,EAAYC,aAAW,SAAA8E,GAAK,MAAK,CACnC/C,UAAW,CACPrB,WAAY,UACZJ,OAAQ,GACRJ,QAAS,OACTsE,WAAY,SACZO,WAAY,2DAEhBC,OAAQ,CACJC,SAAU,WACV1E,aAAc,GACd2E,gBAAiB,UACjBpE,OAAQ,SACRT,MAAO,QAET8E,WAAY,CACVtE,MAAO,UACPL,QAASsE,EAAMM,QAAQ,EAAG,GAC1B9E,OAAQ,OACR2E,SAAU,WACV/E,QAAS,OACTsE,WAAY,UAEda,UAAW,CACThF,MAAO,QAETiF,WAAY,CACV9E,QAASsE,EAAMM,QAAQ,EAAG,EAAG,EAAG,GAChCG,YAAa,GACb3E,SAAU,GACVN,OAAQ,GACRD,MAAO,YA2BAmF,EAvBA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACRxE,EAAUlB,IAEhB,OACI,cAACsB,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAxB,SACA,eAACV,EAAA,EAAD,CAAKC,UAAWL,EAAQ+D,OAAxB,UACI,cAAC3D,EAAA,EAAD,CAAKC,UAAWL,EAAQkE,WAAxB,SACE,cAAC,IAAD,CAAYvE,SAAS,YAEvB,cAAC8E,EAAA,EAAD,CACEC,YAAY,2BACZ1E,QAAS,CACP2E,KAAM3E,EAAQoE,UACdQ,MAAO5E,EAAQqE,YAEjBQ,WAAY,CAAE,aAAc,UAC5BC,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOC,gB,oDCpD1CC,EAAM,iDAECC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEMC,IAAMC,KAAN,UAAcL,EAAd,QAAyBE,GAF/B,cAEXI,EAFW,yBAGRA,EAASJ,MAHD,gCAKf/B,QAAQoC,IAAI,mCAAZ,MALe,yDAAH,sDASPC,EAAQ,uCAAG,4BAAAL,EAAA,+EAEKC,IAAMK,IAAN,UAAaT,EAAb,WAFL,cAEZM,EAFY,yBAGTA,EAASJ,MAHA,gCAKhB/B,QAAQoC,IAAI,oCAAZ,MALgB,yDAAH,qDASRG,EAAe,uCAAG,WAAOR,GAAP,SAAAC,EAAA,+EAEjBC,IAAMC,KAAN,UAAcL,EAAd,qBAAsCE,GAFrB,sDAIvB/B,QAAQoC,IAAI,2CAAZ,MAJuB,wDAAH,sDAQfI,EAAe,uCAAG,WAAOC,GAAP,eAAAT,EAAA,+EAEFC,IAAMC,KAAN,UAAcL,EAAd,qBAAsCY,GAFpC,cAEnBN,EAFmB,yBAGhBA,EAASJ,MAHO,gCAKvB/B,QAAQoC,IAAI,2CAAZ,MALuB,yDAAH,sDASfM,EAAW,uCAAG,WAAOC,GAAP,eAAAX,EAAA,+EAEEC,IAAMK,IAAN,UAAaT,EAAb,wBAAgCc,IAFlC,cAEfR,EAFe,yBAGZA,EAASJ,MAHG,gCAKnB/B,QAAQoC,IAAI,uCAAZ,MALmB,yDAAH,sDASXQ,EAAW,uCAAG,WAAOb,GAAP,SAAAC,EAAA,+EAENC,IAAMC,KAAN,UAAcL,EAAd,gBAAiCE,GAF3B,wEAInB/B,QAAQoC,IAAI,4CAAZ,MAJmB,wDAAH,sDCzClB3G,EAAYC,YAAW,CACzB+B,UAAW,CACPzB,OAAQ,GACRJ,QAAS,OACTM,QAAS,SACT2G,OAAQ,WAEZC,eAAgB,CACZ/G,MAAO,GACPC,OAAQ,GACR+G,UAAW,QACX9G,aAAc,MACdC,QAAS,UAEb8G,UAAW,CACPpH,QAAS,QAEbqH,UAAW,CACP3G,SAAU,GACV8D,WAAY,OACZ7D,MAAO,YACP8D,YAAa,IAEjB6C,KAAM,CACFtH,QAAS,QACTW,MAAO,qBACPD,SAAU,MAqDH6G,EAjDM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdzG,EAAUlB,IACVoG,EAAMuB,EAAKlG,SAET4B,EAAcjC,qBAAWkC,KAAzBD,UACR,EAA6CjC,qBAAWC,KAAhDF,EAAR,EAAQA,QAAiByG,GAAzB,EAAiBC,OAAjB,EAAyBD,gBAEzB,EAA8B9E,mBAAS,IAAvC,mBAAOgF,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACN,IAAMC,EAAsB,uCAAG,4BAAA1B,EAAA,sEACRQ,EAAgB,CAAEmB,OAAQ/G,EAAQgH,SAAUC,SAAUT,EAAKQ,WADnD,OACrB7B,EADqB,OAE3ByB,EAAW,CAAEN,KAAMnB,EAAKwB,QAASN,UAAWlB,EAAK+B,YAFtB,2CAAH,qDAI5BJ,MACD,CAACL,IAEJ,IAAMU,EAAO,uCAAG,sBAAA/B,EAAA,6DACZlD,EAAUsE,GADE,SAENb,EAAgB,CAAEyB,SAAUpH,EAAQgH,SAAUK,WAAYb,EAAKQ,WAFzD,2CAAH,qDAKPM,EAAU,SAACC,GACb,OAAOA,EAAO,GAAK,IAAMA,EAAOA,GAGpC,OACI,eAACpH,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAWQ,QAAS,kBAAM8F,KAAlD,UACI,cAAChH,EAAA,EAAD,UACI,qBAAKE,IAAK4E,EAAK1E,IAAI,kBAAkBH,UAAWL,EAAQmG,mBAE5D,eAAC/F,EAAA,EAAD,CAAKqH,MAAO,CAACrI,MAAO,QAApB,UACI,eAACgB,EAAA,EAAD,CAAKC,UAAWL,EAAQqG,UAAxB,UACI,cAAC5F,EAAA,EAAD,UAAagG,EAAK/F,OAEdkG,EAAQL,MACR,eAAC9F,EAAA,EAAD,CAAYJ,UAAWL,EAAQsG,UAA/B,UACKiB,EAAQ,IAAIG,KAAKd,EAAQN,WAAWqB,YADzC,IACuDJ,EAAQ,IAAIG,KAAKd,EAAQN,WAAWsB,oBAInG,cAACxH,EAAA,EAAD,UACI,cAACK,EAAA,EAAD,CAAYJ,UAAWL,EAAQuG,KAA/B,SAAsCK,EAAQL,gBCvE5DzH,EAAYC,YAAW,CACzB+B,UAAW,CACP+G,SAAU,UACVxI,OAAQ,QAEZyI,QAAS,CACLjI,OAAQ,aACRoE,gBAAiB,aA2CV8D,EAvCO,SAAC,GAAc,IAAZxB,EAAW,EAAXA,KACfvG,EAAUlB,IAChB,EAA0B8C,mBAAS,IAAnC,mBAAOkE,EAAP,KAAckC,EAAd,KAEA,EAA4C9H,qBAAWC,KAA/CF,EAAR,EAAQA,QAAS0G,EAAjB,EAAiBA,OAAQsB,EAAzB,EAAyBA,eAkBzB,OAhBAnB,qBAAU,WACN,IAAMoB,EAAS,uCAAG,8BAAA7C,EAAA,sEACGK,IADH,OACVN,EADU,OAEV+C,EAAc/C,EAAKgD,QAAO,SAAA3B,GAAI,OAAIA,EAAK/F,KAAK2H,cAAcC,SAAS/B,EAAK8B,kBAC5EL,EAASG,GAHK,2CAAH,qDAKfD,MACD,CAAC3B,IAEJO,qBAAU,WACNH,EAAO4B,QAAQC,KAAK,UAAWvI,EAAQgH,UACvCN,EAAO4B,QAAQE,GAAG,YAAY,SAAA3C,GAC1BmC,EAAenC,QAEpB,CAAC7F,IAGA,cAACG,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAxB,SAEQgF,GAASA,EAAM4C,KAAI,SAACjC,EAAMkC,GAAP,OACflC,EAAKQ,WAAahH,EAAQgH,UACtB,qCACI,cAAC,EAAD,CAAcR,KAAMA,IAEhBX,EAAM8C,SAAYD,EAAQ,GAAO,cAACE,EAAA,EAAD,CAASxI,UAAWL,EAAQ8H,mBC7B9EgB,EAbF,WACT,MAAwBlH,mBAAS,IAAjC,mBAAO2E,EAAP,KAAa/B,EAAb,KACA,OACI,cAACpE,EAAA,EAAD,UACI,eAACA,EAAA,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQoE,QAASA,IACjB,cAAC,EAAD,CAAe+B,KAAMA,UCT/BzH,EAAYC,YAAW,CACzB4B,OAAQ,CACJtB,OAAQ,GACRI,WAAY,UACZR,QAAS,OACTM,QAAS,YACTgE,WAAY,UAEhB4C,eAAgB,CACZ/G,MAAO,GACPC,OAAQ,GACR+G,UAAW,QACX9G,aAAc,MACdC,QAAS,SAEbmB,KAAM,CACF+C,WAAY,IAEhBsF,eAAgB,CACZtF,WAAY,OACZ,QAAS,CACLlE,QAAS,EACTI,SAAU,GACVC,MAAO,YAGfoJ,OAAQ,CACJrJ,SAAU,GACVC,MAAO,oBACP6D,WAAY,MA8BLwF,EA1BI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZlJ,EAAUlB,IAEVoG,EAAMgE,EAAO3I,SAEX4I,EAAgBjJ,qBAAWC,KAA3BgJ,YAIR,OAFA9F,QAAQoC,IAAI0D,GAGR,eAAC/I,EAAA,EAAD,CAAKC,UAAWL,EAAQW,OAAxB,UACI,qBAAKL,IAAK4E,EAAK1E,IAAI,kBAAmBH,UAAWL,EAAQmG,iBACzD,eAAC/F,EAAA,EAAD,WACI,cAACK,EAAA,EAAD,CAAYJ,UAAWL,EAAQU,KAA/B,SAAsCwI,EAAOxI,OAC7C,cAACD,EAAA,EAAD,CAAYJ,UAAWL,EAAQgJ,OAA/B,SACgB,OAAXG,QAAW,IAAXA,KAAaC,MAAK,SAAA3C,GAAI,OAAIA,EAAK4C,SAAWH,EAAOjC,YAAY,SAAW,eAGjF,eAAC7G,EAAA,EAAD,CAAKC,UAAWL,EAAQ+I,eAAxB,UACI,cAAC,IAAD,IACA,cAACzG,EAAA,EAAD,W,kBCtDVxD,GAAYC,YAAW,CACzBuK,QAAS,CACL7J,WAAY,UACZF,QAAS,EACTgK,SAAU,MACVnK,MAAO,cACPH,QAAS,OACTK,aAAc,GACdkK,UAAW,cAEfC,IAAK,CACDhK,WAAY,UACZF,QAAS,EACTgK,SAAU,MACVnK,MAAO,cACPqE,WAAY,OACZxE,QAAS,OACTK,aAAc,GACdkK,UAAW,cAEfjD,KAAM,CACF5G,SAAU,GACVJ,QAAS,gBAEbiI,KAAK,cACD7H,SAAU,GACVC,MAAO,UACPgB,UAAW,EACX4I,UAAW,YAJX,YAKW,UAsBJE,GAlBC,SAAC,GAAiB,IAAf9C,EAAc,EAAdA,QACT5G,EAAUlB,KACRmB,EAAYC,qBAAWC,KAAvBF,QAEF0J,EAAa,SAACC,GAChB,OAAOA,EAAO,GAAK,IAAMA,EAAOA,GAGpC,OACI,eAACxJ,EAAA,EAAD,CAAKC,UAAWJ,EAAQgH,WAAaL,EAAQI,OAAShH,EAAQyJ,IAAMzJ,EAAQsJ,QAA5E,UACI,cAAC7I,EAAA,EAAD,CAAYJ,UAAWL,EAAQuG,KAA/B,SAAsCK,EAAQL,OAC9C,eAAC9F,EAAA,EAAD,CAAYJ,UAAWL,EAAQwH,KAA/B,UACKmC,EAAW,IAAIjC,KAAKd,EAAQiD,WAAWlC,YAD5C,IAC0DgC,EAAW,IAAIjC,KAAKd,EAAQiD,WAAWjC,qB,8BC5CvG9I,GAAYC,aAAW,SAAC8E,GAAD,MAAY,CACrCiG,OAAQ,CACJzK,OAAQ,OACRI,WAAY,UAEZL,MAAO,OACP2K,OAAQ,EACR9K,QAAS,OACTsE,WAAY,SACZhE,QAAS,SACT,QAAS,CACLM,OAAQ,EACRD,MAAO,YAGfmE,OAAQ,CACJzE,aAAc,GACd2E,gBAAiB,UACjB7E,MAAO,qBAEXgF,UAAW,CACPhF,MAAO,QAEXiF,WAAY,CACR9E,QAASsE,EAAMM,QAAQ,EAAG,EAAG,EAAG,GAChCG,YAAa,GACb3E,SAAU,GACVN,OAAQ,GACRD,MAAO,QAEX4K,SAAU,CACNC,UAAW,qBAiCJC,GA5BA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUlF,EAAsB,EAAtBA,MAAOmF,EAAe,EAAfA,SACzBpK,EAAUlB,KAGhB,OACI,eAACsB,EAAA,EAAD,CAAKC,UAAWL,EAAQ8J,OAAxB,UACI,cAACO,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAYjK,UAAWL,EAAQgK,WAE/B,cAAC5J,EAAA,EAAD,CAAKC,UAAWL,EAAQ+D,OAAxB,SACI,cAACU,EAAA,EAAD,CACIC,YAAY,iBACZ1E,QAAS,CACL2E,KAAM3E,EAAQoE,UACdQ,MAAO5E,EAAQqE,YAEnBQ,WAAY,CAAE,aAAc,UAC5BC,SAAU,SAACC,GAAD,OAAOqF,EAASrF,EAAEC,OAAOC,QACnCsF,WAAY,SAACxF,GAAD,OAAOoF,EAASpF,IAC5BE,MAAOA,MAIf,cAACuF,GAAA,EAAD,QCrDN1L,GAAYC,YAAW,CACzBuK,QAAS,CACLmB,gBAAgB,OAAD,OAAS,uGAAT,KAEfC,eAAgB,OAEpBZ,OAAQ,CACJzK,OAAQ,OACRI,WAAY,UAEZL,MAAO,QAGX0B,UAAW,CACPzB,OAAQ,OACRsL,UAAW,UAEftE,UAAW,CACP9G,QAAS,cAuFFqL,GAlFE,SAAC,GAA8B,IAAD,EAA3B1B,EAA2B,EAA3BA,OAAQ2B,EAAmB,EAAnBA,aAClB7K,EAAUlB,KAEhB,EAAgC8C,mBAAS,IAAzC,mBAAOkJ,EAAP,KAAiBC,EAAjB,KACA,EAA8CnJ,mBAAS,MAAvD,mBAAOoJ,EAAP,KAAwBC,EAAxB,KACA,EAA0BrJ,qBAA1B,mBAAOqD,EAAP,KAAcmF,EAAd,KAEMc,EAAYC,mBAElB,EAA+DjL,qBAAWC,KAAlEF,EAAR,EAAQA,QAAS0G,EAAjB,EAAiBA,OAAQD,EAAzB,EAAyBA,eAAgB0E,EAAzC,EAAyCA,kBAEzCtE,qBAAU,WAENH,EAAO4B,QAAQE,GAAG,cAAc,SAAArD,GAC5B6F,EAAmB,CACfjE,OAAQ5B,EAAKiC,SACbd,KAAMnB,EAAKmB,KACXsD,UAAWnC,KAAK2D,aAGzB,IAEHvE,qBAAU,WACN,IAAMwE,EAAiB,uCAAG,4BAAAjG,EAAA,sEACLU,EAAY8E,EAAaU,KADpB,OAClBnG,EADkB,OAEtB2F,EAAY3F,GAFU,2CAAH,qDAIvBkG,MACD,QAACT,QAAD,IAACA,OAAD,EAACA,EAAcU,IAAKrC,EAAOqC,IAAK7E,IAEnCI,qBAAU,WAAO,IAAD,EACZ,UAAAoE,EAAU3C,eAAV,SAAmBiD,eAAe,CAAE1H,WAAY,aACjD,CAACgH,IAEJhE,qBAAU,WAAO,IAAD,EACZkE,IAAe,OAAIH,QAAJ,IAAIA,GAAJ,UAAIA,EAAcY,eAAlB,aAAI,EAAuBnD,SAAS0C,EAAgBhE,UAC/D+D,GAAY,SAACW,GAAD,6BAAcA,GAAd,CAAoBV,SAErC,CAACA,EAAiBH,IAErB,IAAMvD,EAAU,OAAGuD,QAAH,IAAGA,GAAH,UAAGA,EAAcY,eAAjB,aAAG,EAAuBrC,MAAK,SAAAuC,GAAM,OAAIA,IAAW1L,EAAQgH,YAEtEkD,EAAQ,uCAAG,WAAOpF,GAAP,iBAAAM,EAAA,yDACTuG,EAAO7G,EAAE8G,SAAW9G,EAAE+G,MACtB7G,EAFS,oDAID,KAAT2G,EAJU,wBAKLhF,EAAU,CACVI,OAAQ/G,EAAQgH,SAChB8E,eAAgBlB,EAAaU,IAC7BhF,KAAMtB,GAGV0B,EAAO4B,QAAQC,KAAK,cAAe,CAC/BnB,SAAUpH,EAAQgH,SAClBK,aACAf,KAAMtB,IAdD,SAiBHgB,EAAYW,GAjBT,OAmBTwD,EAAS,IACTgB,GAAkB,SAAAM,GAAI,OAAKA,KApBlB,4CAAH,sDAwBd,OACI,eAACtL,EAAA,EAAD,CAAKC,UAAWL,EAAQsJ,QAAxB,UACI,cAAClJ,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAxB,SAEQgK,GAAYA,EAASpC,KAAI,SAAA9B,GAAO,OAC5B,cAACxG,EAAA,EAAD,CAAKC,UAAWL,EAAQqG,UAAW2F,IAAKd,EAAxC,SACI,cAAC,GAAD,CAAStE,QAASA,WAKlC,cAAC,GAAD,CAAQuD,SAAUA,EAAUlF,MAAOA,EAAOmF,SAAUA,QC/EjD6B,GAtBC,WACZ,MAA8B/L,qBAAWkC,KAAjC8G,EAAR,EAAQA,OACAjJ,GADR,EAAgBkC,UACIjC,qBAAWC,KAAvBF,SAER,EAAwC2B,mBAAS,IAAjD,mBAAOiJ,EAAP,KAAqBjF,EAArB,KAUA,OARAkB,qBAAU,WACN,IAAMoF,EAAsB,uCAAG,4BAAA7G,EAAA,sEACVQ,EAAgB,CAAEmB,OAAQ/G,EAAQgH,SAAUC,SAAUgC,EAAOjC,WADnD,OACvB7B,EADuB,OAE3BQ,EAAgBR,GAFW,2CAAH,qDAI5B8G,MACD,CAAChD,EAAOjC,WAGP,eAAC7G,EAAA,EAAD,CAAKqH,MAAO,CAACpI,OAAQ,OAArB,UACI,cAAC,EAAD,CAAY6J,OAAQA,IACpB,cAAC,GAAD,CAAUA,OAAQA,EAAQ2B,aAAcA,QCzB9CtJ,GAAWxC,aAAW,SAAA8E,GAAK,MAAK,CAClC/C,UAAW,CACPrB,WAAY,UACZF,QAAS,SACT4M,UAAW,SACX9M,OAAQ,QAEZgH,UAAU,cACN9G,QAAS,WACRsE,EAAMuI,YAAYC,KAAK,MAAQ,CAC5B9M,SAAU,IAGlB+M,MAAO,CACHlN,MAAO,KAEXmN,MAAO,CACH5M,SAAU,GACVkB,WAAY,IACZjB,MAAO,UACPgB,UAAW,IAEf4L,SAAU,CACN5L,UAAW,GACXjB,SAAU,GACVC,MAAO,uBAEXkI,QAAS,CACLjI,OAAQ,cAsBD4M,GAlBG,WACd,IAAMzM,EAAUuB,KAGhB,OACI,cAACnB,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAxB,SACI,eAACV,EAAA,EAAD,CAAKC,UAAWL,EAAQqG,UAAxB,UACI,qBAAK/F,IALL,2FAKeE,IAAI,KAAKH,UAAWL,EAAQsM,QAC3C,cAAC7L,EAAA,EAAD,CAAYJ,UAAWL,EAAQuM,MAA/B,uCACA,cAAC9L,EAAA,EAAD,CAAYJ,UAAWL,EAAQwM,SAA/B,sHAGA,cAAC3D,EAAA,EAAD,CAASxI,UAAWL,EAAQ8H,gBCrCtChJ,GAAYC,YAAW,CACzB+B,UAAW,CACP7B,QAAS,QAEbyN,cAAe,CACXC,SAAU,KAEdC,eAAgB,CACZxN,MAAO,MACPuN,SAAU,IACVtN,OAAQ,OACRwN,WAAY,mCAyCLC,eArCD,CACVC,YAAa,CACT1N,OAAQ,MACRD,MAAO,MACPmK,SAAU,OACVyD,UAAW,OACX1N,aAAc,EACdI,UAAW,OACXmI,SAAU,WA6BHiF,EAzBI,SAAC,GAAiB,IAAf9M,EAAc,EAAdA,QACZiN,EAAYnO,KAEVoK,EAAWhJ,qBAAWkC,KAAtB8G,OAER,OACI,cAACgE,EAAA,EAAD,CACIlM,MAAM,EACNhB,QAAS,CAACmN,MAAOnN,EAAQ+M,aACzBK,cAAe,CAAC3F,MAAO,CAACxD,gBAAiB,UAH7C,SAKI,eAAC7D,EAAA,EAAD,CAAKC,UAAW4M,EAAUnM,UAA1B,UACI,cAACV,EAAA,EAAD,CAAKC,UAAW4M,EAAUP,cAA1B,SACI,cAAC,EAAD,MAEJ,cAACtM,EAAA,EAAD,CAAKC,UAAW4M,EAAUL,eAA1B,SAEQS,OAAOC,KAAKpE,GAAQN,OAAU,cAAC,GAAD,IAAa,cAAC,GAAD,c,oBC7C7DrH,GAAWxC,YAAW,CACxB+B,UAAW,CACP7B,QAAS,QAEbsO,OAAQ,CACJhO,QAAS,oBAEbiO,GAAI,CACA3N,OAAQ,gBACRR,OAAQ,IACRD,MAAO,KAEXmN,MAAO,CACH5M,SAAU,GACV8N,aAAc,GACd7N,MAAO,UACP8N,WAAY,8FACZ7M,WAAY,KAEhB8M,KAAM,CACF,SAAU,CACNpO,QAAS,EACTqB,UAAW,GACXjB,SAAU,GACViO,WAAY,OACZhO,MAAO,cAkGJkN,eA7FD,CACVC,YAAa,CACTnM,UAAW,MACXvB,OAAQ,MACRD,MAAO,MACPmK,SAAU,OACVyD,UAAW,OACX1N,aAAc,EACdI,UAAW,OACXmI,SAAU,WAoFHiF,EAhFK,SAAC,GAAiB,IAAf9M,EAAc,EAAdA,QACbiN,EAAY1L,KACZ0B,EAAW,2EAEjB,EAAwBrB,oBAAS,GAAjC,mBAAaX,GAAb,WAEA,EAA2Gf,qBAAWC,KAArG4B,GAAjB,EAAQ9B,QAAR,EAAiB8B,YAAW8L,EAA5B,EAA4BA,gBAAiB7L,EAA7C,EAA6CA,mBAAoBC,EAAjE,EAAiEA,iBAAkBC,EAAnF,EAAmFA,oBAE7E4L,EAAc,uCAAG,WAAOC,GAAP,SAAA1I,EAAA,6DACnBhC,QAAQoC,IAAI,iBAAkBsI,EAAIC,YAClCjM,EAAWgM,EAAIC,YACfhM,GAAmB,GACnBE,GAAoB,GAJD,SAKbiD,EAAQ4I,EAAIC,YALC,2CAAH,sDAmBpBlH,qBAAU,WACN7F,GAAQ,KACT,IAQH,OACI,cAACiM,EAAA,EAAD,CAAQ9L,QALQ,WAChBH,GAAQ,IAKJD,MAAM,EACNhB,QAAS,CAACmN,MAAOnN,EAAQ+M,aACzBK,cAAe,CAAC3F,MAAO,CAACxD,gBAAiB,UAH7C,SAKI,eAAC7D,EAAA,EAAD,CAAKC,UAAW4M,EAAUnM,UAA1B,UACI,eAACV,EAAA,EAAD,CAAKC,UAAW4M,EAAUM,OAA1B,UACI,cAAC9M,EAAA,EAAD,CAAYJ,UAAW4M,EAAUV,MAAjC,+CACA,eAAC0B,GAAA,EAAD,CAAM5N,UAAW4M,EAAUU,KAA3B,UACI,cAACO,GAAA,EAAD,6CACA,cAACA,GAAA,EAAD,2DACA,cAACA,GAAA,EAAD,2EAGR,eAAC9N,EAAA,EAAD,CAAKqH,MAAO,CAACzD,SAAS,YAAtB,UACI,qBAAK1D,IAtBT,uDAsBmBE,IAAI,KAAKH,UAAW4M,EAAUO,KAC7C,sBAAK/F,MAAO,CAACzD,SAAU,WAAYmK,KAAM,MAAOC,IAAK,MAAOnE,UAAW,mCAAvE,UACM4D,EACE,cAAC,cAAD,CACI5K,SAAUA,EACVC,WAAW,GACXmL,UAAWP,EACXQ,UA5CL,SAACP,GACpB1K,QAAQoC,IAAI,gBAAiBsI,IA4CLQ,aAAc,qBACdC,YAAY,IACX,KAEPvM,EACE,cAAC,eAAD,CACIgB,SAAUA,EACVC,WAAW,GACXC,gBAjDH,WACrBC,MAAM,yCACNC,QAAQC,QACRtB,GAAmB,GACnBE,GAAoB,MA+CkB,mBClHxCpD,GAAYC,YAAW,CACzB+B,UAAW,CACPzB,OAAQ,QACRI,WAAY,WAEhBkB,OAAQ,CACJlB,WAAY,UACZJ,OAAQ,IACRK,UAAW,QAEf+O,YAAa,CACThP,WAAY,UACZJ,OAAQ,IACRK,UAAW,UAqBJgP,UAjBG,WACd,IAAM1O,EAAUlB,KACRmB,EAAYC,qBAAWC,KAAvBF,QACR,OACI,eAACG,EAAA,EAAD,CAAKC,UAAWL,EAAQc,UAAxB,UACI,cAAC6N,EAAA,EAAD,CAAQtO,UAAWJ,EAAUD,EAAQW,OAASX,EAAQyO,YAAtD,SACI,cAACG,EAAA,EAAD,MAKA3O,EAAU,cAAC,GAAD,IAAiB,cAAC,GAAD","file":"static/js/4.aeae7871.chunk.js","sourcesContent":["import React ,{ useContext } from \"react\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\"\n\nimport { AccountContext } from \"../../context/AccountProvider\";\n\nconst useStyles = makeStyles({\n    imageContainer: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    profilePicture: {\n        width: 200,\n        height: 200,\n        borderRadius: '50%',\n        padding: '18px 0'\n    },\n    nameContainer: {\n        background: '#FFFFFF',\n        padding: '12px 30px 2px',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.08)',\n        '& :first-child': {\n            fontSize: 14   ,\n            color:'#009688' \n        },\n        '& :last-child': {\n            margin: '14px 0',\n            color: '#4A4A4A'\n        }\n    },\n    description: {\n        padding: '10px 20px 28px 30px',\n        '& > *': {\n            color: 'rgba(0, 0, 0, 0.45)',\n            fontSize: 12\n        }\n    }\n})\n\nconst Profile = () => {\n    const classes = useStyles();\n\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n            <Box className={classes.imageContainer}>\n                <img src={account.imageUrl} alt=\"displaypicture\" className={classes.profilePicture} />\n            </Box>\n            <Box className={classes.nameContainer}>\n                <Typography>Your Name</Typography>\n                <Typography>{account.name}</Typography>\n            </Box>\n            <Box className={classes.description}>\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts</Typography>\n            </Box>\n            <Box className={classes.nameContainer}>\n                <Typography>About</Typography>\n                <Typography>Be Yourself</Typography>\n            </Box>\n        </>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { makeStyles, Drawer, Box, Typography } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\n//components\nimport Profile from './Profile';\n\nconst useStyles = makeStyles({\n  header: {\n    background: '#00bfa5',\n    height: 97,\n    color: '#FFFFFF',\n    display: 'flex',\n    '& > *': {\n      marginTop: 'auto',\n      padding: 15,\n      fontWeight: 600\n    }\n  },\n  component: {\n    background: '#ededed',\n    height: '85%'\n  } \n});\n\nconst InfoDrawer = ({ open, setOpen, profile }) => {\n  const classes = useStyles();\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Drawer open={open} onClose={handleClose}>\n      <Box className={classes.header}>\n        <ArrowBack onClick={() => setOpen(false)}/>\n        <Typography>Profile</Typography>\n      </Box>\n      <Box className={classes.component}>\n        { profile && <Profile /> }\n      </Box>\n    </Drawer>\n  );\n}\n\nexport default InfoDrawer;","import  React,{ useState, useContext } from 'react';\nimport { MoreVert } from '@material-ui/icons';\nimport { Menu, MenuItem, makeStyles } from '@material-ui/core';\n\nimport { GoogleLogout } from 'react-google-login';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { UserContext } from '../../../context/UserProvider';\n\nimport { clientId } from '../../../constants/data';\n\n//components\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst useStyle = makeStyles({\n    menuItem: {\n        fontSize: 14,\n        padding: '15px 60px 5px 24px',\n        color: '#4A4A4A'\n    },\n    logout: {\n        border:'none!important', \n        boxShadow: 'none!important',\n        '& > *': {\n            padding: '0px!important'\n        }\n    }\n})\n\nconst HeaderMenu = () => {\n    const classes = useStyle();\n    \n    const [open, setOpen] = useState(false);\n    const [openDrawer, setOpenDrawer] = useState(false);\n    \n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\n    const { setPerson } = useContext(UserContext);\n\n\n    const handleClick = (event) => {\n        setOpen(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setOpen(null);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowlogoutButton(false);\n        setShowloginButton(true);\n        setAccount('');\n        setPerson({});\n    };\n\n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n\n\n    return (\n        <>\n            <MoreVert onClick={handleClick} />\n            <Menu\n                anchorEl={open}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuItem className={classes.menuItem} onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuItem>\n                <MenuItem className={classes.menuItem} onClick={() => { handleClose(); }}>\n                { showlogoutButton ?\n                    <GoogleLogout\n                        clientId={clientId}\n                        buttonText=\"Logout\"\n                        onLogoutSuccess={onSignoutSuccess}\n                        className={classes.logout}\n                    >\n                    </GoogleLogout> : null\n                }\n                </MenuItem>\n            </Menu>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default HeaderMenu;\n","export const clientId = '538880638100-vt7ogumu555ipciltgl18f38frl0bafd.apps.googleusercontent.com'","import  React, { useContext, useState } from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { Chat as MessageIcon } from '@material-ui/icons';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport HeaderMenu from './HeaderMenu';\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst useStyles = makeStyles({\n    header: {\n        height: 35,\n        background: '#ededed',\n        display: 'flex',\n        padding: '10px 16px',\n        alignItems: 'center'\n    },\n    chatIcons: {\n        marginLeft: 'auto',\n        '& > *': {\n            marginLeft: 2,\n            padding: 8,\n            color: '#919191'\n        },\n        '& :first-child': {\n            fontSize: 22,\n            marginRight: 8,\n            marginTop: 3\n        }\n    },\n    avatar: {\n        height: 37,\n        width: 37,\n        borderRadius: '50%'\n    }\n})\n\nconst Header = () => {\n    const classes = useStyles();\n    \n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    const { account } = useContext(AccountContext);\n    \n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n    return (\n        <>\n            <Box className={classes.header}>\n                <img src={account.imageUrl} className={classes.avatar} onClick={() => toggleDrawer()} />\n                <Box className={classes.chatIcons}>\n                    <MessageIcon />\n                    <HeaderMenu/>\n                </Box>\n            </Box>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default Header;","import  React from 'react';\nimport { Box, InputBase, makeStyles } from '@material-ui/core';\nimport { Search as SearchIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    component: {\n        background: '#F6F6F6',\n        height: 43,\n        display: 'flex',\n        alignItems: 'center',\n        transition: 'box-shadow .18s ease-out,background-color .25s ease-out'\n    },\n    search: {\n        position: 'relative',\n        borderRadius: 18,\n        backgroundColor: '#FFFFFF',\n        margin: '0 13px',\n        width: '100%'\n      },\n      searchIcon: {\n        color: '#919191',\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      inputRoot: {\n        width: '100%'\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: 65,\n        fontSize: 14,\n        height: 15,\n        width: '100%'\n    }\n}));\n\nconst Search = ({ setText }) => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.component}>\n        <Box className={classes.search}>\n            <Box className={classes.searchIcon}>\n              <SearchIcon fontSize=\"small\"/>\n            </Box>\n            <InputBase\n              placeholder=\"Search or start new chat\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </Box>\n        </Box>\n    )\n}\n\nexport default Search;","\nimport axios from 'axios';\n\nconst url = 'https://lovnish-whatsapp-clonee.herokuapp.com/';\n\nexport const addUser = async (data) => {\n    try {\n        let response = await axios.post(`${url}/add`, data);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling addUser API ', error);\n    }\n}\n\nexport const getUsers = async () => {\n    try {\n        let response = await axios.get(`${url}/users`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getUsers API ', error);\n    }\n}\n\nexport const setConversation = async (data) => {\n    try {\n        await axios.post(`${url}/conversation/add`, data);\n    } catch (error) {\n        console.log('Error while calling setConversation API ', error);\n    }\n}\n\nexport const getConversation = async (users) => {\n    try {\n        let response = await axios.post(`${url}/conversation/get`, users);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling getConversation API ', error);\n    }\n}\n\nexport const getMessages = async (id) => {\n    try {\n        let response = await axios.get(`${url}/message/get/${id}`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getMessages API ', error);\n    }\n}\n\nexport const newMessages = async (data) => {\n    try {\n        return await axios.post(`${url}/message/add`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}","import  React,{ useContext, useEffect, useState } from 'react'\nimport { makeStyles, Box, Typography } from \"@material-ui/core\";\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { setConversation, getConversation } from '../../../service/api';\n\nconst useStyles = makeStyles({\n    component: {\n        height: 40,\n        display: 'flex',\n        padding: '13px 0',\n        cursor: 'pointer'\n    },\n    displayPicture: {\n        width: 50,\n        height: 50,\n        objectFit: 'cover',\n        borderRadius: '50%',\n        padding: '0 14px'\n    },\n    container: {\n        display: 'flex'\n    },\n    timestamp: {\n        fontSize: 12,\n        marginLeft: 'auto',\n        color: '#00000099',\n        marginRight: 20\n    },\n    text: {\n        display: 'block',\n        color: 'rgba(0, 0, 0, 0.6)',\n        fontSize: 14\n    }\n})\n\nconst Conversation = ({ user }) => {\n    const classes = useStyles();\n    const url = user.imageUrl \n    \n    const { setPerson } = useContext(UserContext);\n    const { account, socket, newMessageFlag }  = useContext(AccountContext);\n\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        const getConversationMessage = async() => {\n            const data = await getConversation({ sender: account.googleId, receiver: user.googleId });\n            setMessage({ text: data.message, timestamp: data.updatedAt });\n        }\n        getConversationMessage();\n    }, [newMessageFlag]);\n\n    const getUser = async () => {\n        setPerson(user);\n        await setConversation({ senderId: account.googleId, receiverId: user.googleId });\n    }\n\n    const getTime = (time) => {\n        return time < 10 ? '0' + time : time; \n    } \n\n    return (\n        <Box className={classes.component} onClick={() => getUser()}>\n            <Box>\n                <img src={url} alt=\"display picture\" className={classes.displayPicture} />\n            </Box>\n            <Box style={{width: '100%'}}>\n                <Box className={classes.container}>\n                    <Typography>{user.name}</Typography>\n                    { \n                        message.text && \n                        <Typography className={classes.timestamp}>\n                            {getTime(new Date(message.timestamp).getHours())}:{getTime(new Date(message.timestamp).getMinutes())}\n                        </Typography>        \n                    }\n                </Box>\n                <Box>\n                    <Typography className={classes.text}>{message.text}</Typography>\n                </Box>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Conversation;","import  React,{ useState, useEffect, useContext } from 'react';\nimport { Box, makeStyles, Divider } from '@material-ui/core';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Conversation from './Conversation';\nimport { getUsers } from '../../../service/api';\n\nconst useStyles = makeStyles({\n    component: {\n        overflow: 'overlay',\n        height: '81vh'\n    },\n    divider: {\n        margin: '0 0 0 67px',\n        backgroundColor: '#F2F2F2'\n    }\n})\n\nconst Conversations = ({ text }) => {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    \n    const { account, socket, setActiveUsers } = useContext(AccountContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let data = await getUsers();\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\n            setUsers(fiteredData);\n        }\n        fetchData();\n    }, [text]);\n\n    useEffect(() => {\n        socket.current.emit('addUser', account.googleId);\n        socket.current.on(\"getUsers\", users => {\n            setActiveUsers(users);\n        })\n    }, [account])\n\n    return (\n        <Box className={classes.component}>\n            {\n                users && users.map((user, index) => (\n                    user.googleId !== account.googleId && \n                        <>\n                            <Conversation user={user} />\n                            {\n                                users.length !== (index + 1)  && <Divider className={classes.divider} />\n                            }\n                        </>\n                ))\n            }\n        </Box>\n    )\n}\n\nexport default Conversations;","import  React,{ useState } from 'react';\nimport { Box } from '@material-ui/core';\n\n//components\nimport Header from './Header';\nimport Search from './Search';\nimport Conversations from './Conversations';\n\nconst Menu = () => {\n    const [text, setText] = useState('');\n    return (\n        <Box>\n            <Box>\n                <Header/>\n                <Search setText={setText} />\n                <Conversations text={text} />\n            </Box>\n        </Box>\n    )\n}\n\nexport default Menu;","import  React,{ useContext } from 'react';\nimport { Box, Typography, makeStyles } from '@material-ui/core';\nimport { Search, MoreVert } from '@material-ui/icons';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\nconst useStyles = makeStyles({\n    header: {\n        height: 35,\n        background: '#ededed',\n        display: 'flex',\n        padding: '10px 16px',\n        alignItems: 'center'\n    },\n    displayPicture: {\n        width: 37,\n        height: 37,\n        objectFit: 'cover',\n        borderRadius: '50%',\n        padding: '0 2px'\n    },\n    name: {\n        marginLeft: 10\n    },\n    rightContainer: {\n        marginLeft: 'auto',\n        '& > *': {\n            padding: 8,\n            fontSize: 22,\n            color: '#919191'\n        }\n    },\n    status: {\n        fontSize: 12,\n        color: 'rgb(0, 0, 0, 0.6)',\n        marginLeft: 10\n    }\n});\n\nconst ChatHeader = ({ person }) => {\n    const classes = useStyles();    \n\n    const url = person.imageUrl \n    \n    const { activeUsers } = useContext(AccountContext);\n\n    console.log(activeUsers);\n\n    return (\n        <Box className={classes.header}>\n            <img src={url} alt=\"display picture\"  className={classes.displayPicture} />     \n            <Box>\n                <Typography className={classes.name}>{person.name}</Typography>   \n                <Typography className={classes.status}>\n                    {activeUsers?.find(user => user.userId === person.googleId) ? 'Online' : 'Offline'}\n                </Typography>    \n            </Box>   \n            <Box className={classes.rightContainer}>\n                <Search />\n                <MoreVert />    \n            </Box> \n        </Box>\n    )\n}\n\nexport default ChatHeader;","import  React,{ useContext } from 'react';\n\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { AccountContext } from '../../../context/AccountProvider';\n\nconst useStyles = makeStyles({\n    wrapper: {\n        background: '#FFFFFF',\n        padding: 5,\n        maxWidth: '60%',\n        width: 'fit-content',\n        display: 'flex',\n        borderRadius: 10,\n        wordBreak: 'break-word'\n    },\n    own: {\n        background: '#dcf8c6',\n        padding: 5,\n        maxWidth: '60%',\n        width: 'fit-content',\n        marginLeft: 'auto',\n        display: 'flex',\n        borderRadius: 10,\n        wordBreak: 'break-word'\n    },\n    text: {\n        fontSize: 14,\n        padding: '0 25px 0 5px'\n    },\n    time: {\n        fontSize: 10,\n        color: '#919191',\n        marginTop: 6,\n        wordBreak: 'keep-all',\n        marginTop: 'auto'\n    }\n})\n\nconst Message = ({ message }) => {\n    const classes = useStyles();\n    const { account } = useContext(AccountContext);\n\n    const formatDate = (date) => {\n        return date < 10 ? '0' + date : date;\n    }\n\n    return (\n        <Box className={account.googleId === message.sender ? classes.own : classes.wrapper}>\n            <Typography className={classes.text}>{message.text}</Typography>\n            <Typography className={classes.time}>\n                {formatDate(new Date(message.createdAt).getHours())}:{formatDate(new Date(message.createdAt).getMinutes())}\n            </Typography>\n        </Box>\n    )\n}\n\nexport default Message;","import  React from 'react';\nimport { EmojiEmotions, AttachFile, Mic } from '@material-ui/icons';\nimport { Box, makeStyles, InputBase } from '@material-ui/core';\n\n//components\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        height: '55px',\n        background: '#ededed',\n        // position: 'absolute',\n        width: '100%',\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 15px',\n        '&  >*': {\n            margin: 5,\n            color: '#919191'\n        }\n    },\n    search: {\n        borderRadius: 18,\n        backgroundColor: '#FFFFFF',\n        width: 'calc(94% - 100px)'\n    },\n    inputRoot: {\n        width: '100%'\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: 25,\n        fontSize: 14,\n        height: 20,\n        width: '100%'\n    },\n    clipIcon: {\n        transform: 'rotate(40deg)'\n    }\n}));\n\n\nconst Footer = ({ sendText, value, setValue }) => {\n    const classes = useStyles();\n    \n\n    return (\n        <Box className={classes.footer}>\n            <EmojiEmotions />\n            <AttachFile className={classes.clipIcon} />\n\n            <Box className={classes.search}>\n                <InputBase\n                    placeholder=\"Type a message\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyPress={(e) => sendText(e)}\n                    value={value}\n                />\n            </Box>\n\n            <Mic />\n        </Box>\n    )\n}\n\nexport default Footer;","import  React,{ useState, useEffect, useContext, useRef } from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\n\n\n\nimport { getMessages, newMessages } from '../../../service/api';\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Message from './Message';\nimport Footer from './Footer';\n\nconst useStyles = makeStyles({\n    wrapper: {\n        backgroundImage: `url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'})`,\n        // height: 'calc(100% - 114px)',\n        backgroundSize: '50%'\n    },\n    footer: {\n        height: '55px',\n        background: '#ededed',\n        // position: 'absolute',\n        width: '100%',\n        // bottom: 0\n    },\n    component: {\n        height: '79vh',\n        overflowY: 'scroll'\n    },\n    container: {\n        padding: '1px 80px'\n    }\n})\n\n\nconst Messages = ({ person, conversation }) => {\n    const classes = useStyles();\n\n    const [messages, setMessages] = useState([]);\n    const [incomingMessage, setIncomingMessage] = useState(null);\n    const [value, setValue] = useState();\n\n    const scrollRef = useRef();\n\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\n\n    useEffect(() => {\n        \n        socket.current.on('getMessage', data => {\n            setIncomingMessage({\n                sender: data.senderId,\n                text: data.text,\n                createdAt: Date.now()\n            })\n        })\n    }, []);\n    \n    useEffect(() => {\n        const getMessageDetails = async () => {\n            let data = await getMessages(conversation._id);\n            setMessages(data);\n        }\n        getMessageDetails();\n    }, [conversation?._id, person._id, newMessageFlag]);\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\n    }, [messages]);\n\n    useEffect(() => {\n        incomingMessage && conversation?.members?.includes(incomingMessage.sender) && \n            setMessages((prev) => [...prev, incomingMessage]);\n        \n    }, [incomingMessage, conversation]);\n\n    const receiverId = conversation?.members?.find(member => member !== account.googleId);\n    \n    const sendText = async (e) => {\n        let code = e.keyCode || e.which;\n        if(!value) return;\n\n        if(code === 13) { \n            let message = {\n                sender: account.googleId,\n                conversationId: conversation._id,\n                text: value\n            };\n\n            socket.current.emit('sendMessage', {\n                senderId: account.googleId,\n                receiverId,\n                text: value\n            })\n\n            await newMessages(message);\n\n            setValue('');\n            setNewMessageFlag(prev => !prev);\n        } \n    }\n\n    return (\n        <Box className={classes.wrapper}>\n            <Box className={classes.component}>\n                {\n                    messages && messages.map(message => (\n                        <Box className={classes.container} ref={scrollRef}>\n                            <Message message={message} />\n                        </Box>\n                    ))\n                }\n            </Box>\n            <Footer sendText={sendText} value={value} setValue={setValue} />\n        </Box>\n    )\n}\n\nexport default Messages;","import  React,{ useContext, useState, useEffect } from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { getConversation, newMessages } from '../../../service/api';\n\n\nimport ChatHeader from './ChatHeader';\nimport Messages from './Messages';\n\nconst ChatBox = () => {\n    const { person, setPerson } = useContext(UserContext);\n    const { account } = useContext(AccountContext);\n\n    const [conversation, setConversation] = useState({});\n    \n    useEffect(() => {\n        const getConversationDetails = async () => {\n            let data = await getConversation({ sender: account.googleId, receiver: person.googleId });\n            setConversation(data);\n        }\n        getConversationDetails();\n    }, [person.googleId]);\n\n    return (\n        <Box style={{height: '75%'}}>\n            <ChatHeader person={person} />\n            <Messages person={person} conversation={conversation} />\n        </Box>\n    )\n}\n\nexport default ChatBox;","import  React from \"react\";\nimport  { Box, makeStyles, Typography, Divider } from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n    component: {\n        background: '#f8f9fa',\n        padding: '50px 0',\n        textAlign: 'center',\n        height: '100%'\n    },\n    container: {\n        padding: '0 200px',\n        [theme.breakpoints.down('sm')]: {\n            padding: -0\n        }\n    },\n    image: {\n        width: 320\n    },\n    title: {\n        fontSize: 36,\n        fontWeight: 300,\n        color: '#525252',\n        marginTop: 25\n    },\n    subTitle: {\n        marginTop: 10,\n        fontSize: 14,\n        color: 'rgba(0, 0, 0, 0.45)'\n    },\n    divider: {\n        margin: '30px 0'\n    }\n}));\n\nconst EmptyChat = () => {\n    const classes = useStyle();\n    const url = 'https://web.whatsapp.com/img/intro-connection-light_c98cc75f2aa905314d74375a975d2cf2.jpg';\n\n    return (\n        <Box className={classes.component}>\n            <Box className={classes.container}>\n                <img src={url} alt=\"dp\" className={classes.image} />\n                <Typography className={classes.title}>Keep your phone connected</Typography>\n                <Typography className={classes.subTitle}>Whatsapp connects you to your phone to sync messages. To reduce data usage, connect\n                    your phone to Wi-Fi.\n                </Typography>\n                <Divider className={classes.divider} />\n            </Box>\n        </Box>\n    )\n}\n\nexport default EmptyChat;","import React,{ useContext } from 'react';\nimport { Dialog, makeStyles, withStyles, Box } from '@material-ui/core';\n\nimport { UserContext } from '../../context/UserProvider';\n\n//components\nimport Menu from './menu/Menu';\nimport ChatBox from './chat/ChatBox';\nimport EmptyChat from './chat/EmptyChat';\n\nconst useStyles = makeStyles({\n    component: {\n        display: 'flex'\n    },\n    leftComponent: {\n        minWidth: 380\n    },\n    rightComponent: {\n        width: '70%',\n        minWidth: 300,\n        height: '100%',\n        borderLeft: '1px solid rgba(0, 0, 0, 0.14)'\n    }\n})\n\nconst style = {\n    dialogPaper: {\n        height: '95%',\n        width: '91%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        borderRadius: 0,\n        boxShadow: 'none',\n        overflow: 'hidden'\n    }\n};\n\nconst ChatDialog = ({ classes }) => {\n    const classname = useStyles();\n\n    const { person } = useContext(UserContext);\n    \n    return (\n        <Dialog \n            open={true} \n            classes={{paper: classes.dialogPaper}} \n            BackdropProps={{style: {backgroundColor: 'unset'}}}\n        >\n            <Box className={classname.component}>\n                <Box className={classname.leftComponent}>\n                    <Menu/>\n                </Box>\n                <Box className={classname.rightComponent}>\n                    {\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\n                    }\n                </Box>\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default withStyles(style)(ChatDialog);","import  React,{ useState, useEffect, useContext } from 'react';\nimport { Dialog } from '@material-ui/core';\nimport { makeStyles, Typography, List, ListItem, Box, withStyles } from '@material-ui/core';\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nimport { addUser } from '../../service/api';\nimport { AccountContext } from '../../context/AccountProvider';\n\nconst useStyle = makeStyles({\n    component: {\n        display: 'flex'\n    },\n    dialog: {\n        padding: '56px 0 56px 56px',\n    },\n    qr: {\n        margin: '50px 0 0 50px',\n        height: 264,\n        width: 264\n    },\n    title: {\n        fontSize: 26,\n        marginBottom: 25,\n        color: '#525252',\n        fontFamily: 'Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif',\n        fontWeight: 300   \n    },\n    list: {\n        '&  > *': {\n            padding: 0,\n            marginTop: 15,\n            fontSize: 18,\n            lineHeight: '28px',\n            color: '#4a4a4a'\n        }\n    }\n})\n\nconst style = {\n    dialogPaper: {\n        marginTop: '12%',\n        height: '95%',\n        width: '60%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        borderRadius: 0,\n        boxShadow: 'none',\n        overflow: 'hidden'\n    }\n};\n\nconst LoginDialog = ({ classes }) => {\n    const classname = useStyle();\n    const clientId = '538880638100-vt7ogumu555ipciltgl18f38frl0bafd.apps.googleusercontent.com';\n\n    const [open, setOpen] = useState(false);\n\n    const { account, setAccount,showloginButton, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\n\n    const onLoginSuccess = async (res) => {\n        console.log('Login Success:', res.profileObj);\n        setAccount(res.profileObj);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        await addUser(res.profileObj);\n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowloginButton(true);\n        setShowlogoutButton(false);\n    };\n\n    useEffect(() => {\n        setOpen(true);\n    }, [])\n\n    const url = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <Dialog onClose={handleClose}\n            open={true}\n            classes={{paper: classes.dialogPaper}} \n            BackdropProps={{style: {backgroundColor: 'unset'}}}\n        >\n            <Box className={classname.component}>\n                <Box className={classname.dialog}>\n                    <Typography className={classname.title}>To use WhatsApp on your computer:</Typography>\n                    <List className={classname.list}>\n                        <ListItem>1. Open WhatsApp on your phone</ListItem>\n                        <ListItem>2. Tap Menu Settings and select WhatsApp Web</ListItem>\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\n                    </List>\n                </Box>\n                <Box style={{position:'relative'}}>\n                    <img src={url} alt=\"QR\" className={classname.qr} />\n                    <div style={{position: 'absolute', left: '50%', top: '50%', transform: 'translateX(0%) translateY(-25%)'}}>\n                        { showloginButton ?\n                            <GoogleLogin\n                                clientId={clientId}\n                                buttonText=\"\"\n                                onSuccess={onLoginSuccess}\n                                onFailure={onLoginFailure}\n                                cookiePolicy={'single_host_origin'}\n                                isSignedIn={true}\n                            /> : null}\n\n                        { showlogoutButton ?\n                            <GoogleLogout\n                                clientId={clientId}\n                                buttonText=\"\"\n                                onLogoutSuccess={onSignoutSuccess}\n                            >\n                            </GoogleLogout> : null\n                        }\n                    </div>\n                </Box>\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default withStyles(style)(LoginDialog);","import React,{ useContext } from 'react';\nimport { AppBar, Toolbar, makeStyles, Box } from '@material-ui/core';\n\nimport { AccountContext } from '../context/AccountProvider';\n\n//components\nimport ChatDialog from './chat/ChatDialog';\nimport LoginDialog from './account/LoginDialog';\n\nconst useStyles = makeStyles({\n    component: {\n        height: '100vh',\n        background: '#DCDCDC'\n    },\n    header: {\n        background: '#128C7E',\n        height: 115,\n        boxShadow: 'none'\n    },\n    loginHeader: {\n        background: '#00bfa5',\n        height: 200,\n        boxShadow: 'none'\n    }\n})\n\nconst Messenger = () => {\n    const classes = useStyles();\n    const { account } = useContext(AccountContext);\n    return (\n        <Box className={classes.component}>\n            <AppBar className={account ? classes.header : classes.loginHeader}>\n                <Toolbar>\n\n                </Toolbar>\n            </AppBar>\n            {\n                account ? <ChatDialog /> : <LoginDialog />\n            }\n        </Box>\n    )\n}\n\nexport default Messenger;"],"sourceRoot":""}